/*****************************************************************
Function Name :Renewal Quote Creation 
Author : Ravi Kumar
Description : This function will create Renewal Quote for all the selected Contracts and return Quote Details. 
If the Quote is already Created for the selected Contracts in the System Fetch and Display existing Quote Details to User.
/*****************************************************************/
//Fetch Quote Deials if Selected Contracts are already Renewed 
result = "";
res = "";
if(renewContracts_avg == true){
contractnumber = "";
contractLinenum = "";
SerialNumber = "";
primaryFlag = "";
insert_count_integer = "";
User_ID = _BM_USER_LOGIN;
existingQuoteDetails = "";
ContractExsistsDetails = "";
username = "";
password = "";
fileLocation = "";
soapendpoint = "";
//BMQL Query Build
from = "Renewal_Staging";
select = "CONTRACT_NUMBER,CONTRACT_LINE_NUM,SERIAL_NUMBER,USER_ID,Primary_Contract";
lang = dict("string");
fields = dict("string");
size=range(renewalContractsArrayController_avg);
for i in size{
if(selectContract_avg[i]==true){
contractnumber = contractNumber_avg[i];
print contractnumber;
SerialNumber = renewalSerialNumber_avg[i];
contractLinenum = contractLineNumber_avg[i];
ContractExsistsFlag = "";
Contractexistresult = bmql("select DISTINCT RENEWAL_ASSETS.CONTRACT_NUMBER, QUOTE_NUMBER,TRANSACTION_ID,OPPORTUNITY_ID from RENEWAL_ASSETS INNER JOIN RENEWAL_ASSETS_EXT ON RENEWAL_ASSETS_EXT.CONTRACT_NUMBER = RENEWAL_ASSETS.CONTRACT_NUMBER  where RENEWAL_ASSETS.CONTRACT_NUMBER = $contractnumber");
print Contractexistresult;
for contracts in Contractexistresult {
ContractExsistsFlag = "Yes";
break;
}
if(ContractExsistsFlag == "Yes"){
Quoteexistresult = bmql("select DISTINCT QUOTE_NUMBER,TRANSACTION_ID,OPPORTUNITY_ID from RENEWAL_ASSETS where CONTRACT_NUMBER = $contractnumber and TRANSACTION_ID IS NOT NULL");
print Quoteexistresult;
for Quoteno in Quoteexistresult {
existingQuoteDetails = existingQuoteDetails + contractnumber + "~" + get(Quoteno,"QUOTE_NUMBER") + "~" + get(Quoteno,"OPPORTUNITY_ID") + "\n";
}
}else{
ContractExsistsDetails = ContractExsistsDetails + contractnumber + "~";
}

}
}
//If the Contract Doesn't Exists in CPQ Show the list of Contracts which doesn't exists and exit process.
if(ContractExsistsDetails == ""){
//If the Quotes are not already generated Insert Selected Records to Staging table else Return exsiting Quote Details.
if(existingQuoteDetails == ""){

for i in size{
if(selectContract_avg[i]==true){
contractnumber = contractNumber_avg[i];
SerialNumber = renewalSerialNumber_avg[i];
contractLinenum = contractLineNumber_avg[i];
if(selectPrimary_avg[i]==true){
primaryFlag = "Yes";}
else{
primaryFlag = "No";
}
stagingRecordExist = "No";
contractexistinstaging = bmql("select CONTRACT_NUMBER from Renewal_Staging where CONTRACT_NUMBER = $contractnumber and USER_ID = $User_ID");
for contracts in contractexistinstaging {
stagingRecordExist = "Yes";
break;
}
if(stagingRecordExist == "No"){
results = bmql("insert into $from ($select) values ($contractnumber ,$contractLinenum, $SerialNumber, $User_ID, $primaryFlag)");
for result1 in results {
insert_count_integer = get(result1, "records_inserted");
records_error_string = get(result1, "records_error");
}
}
}
}
}else{
result = "Quotes already exist for selected contracts: \n" + existingQuoteDetails;
return result;
}
}
else{
result = "Contract Details does not exist in CPQ: \n" + ContractExsistsDetails;
return result;
}
//Trigger Renewal Adhoc Job Util For Quote Creation
if(existingQuoteDetails == ""){

print "I am here";
res = util.newRenewalAdhocJob("Adhoc_Job", _BM_USER_COMPANY, _BM_USER_COMPANY,_BM_USER_LOGIN);
renewalStagingClearPayload = dict("string");
 renewalStagingClear = bmql("select Username,Password,File_Location,SoapEndpoint from INT_SYSTEM_DETAILS where System = 'Renewal_Staging_Adhoc'");
   for each in renewalStagingClear
   {
    username = get(each,"Username");
    password = get(each,"Password");
    fileLocation = get(each,"File_Location");
    soapendpoint = get(each,"SoapEndpoint");
   }
   put(renewalStagingClearPayload,"Username", username);
   put(renewalStagingClearPayload,"Password", password);
   put(renewalStagingClearPayload,"current_user", _BM_USER_LOGIN);
   defaultErrorMessage="";
   quoteRequestrenewalStagingClear=applytemplate(fileLocation,renewalStagingClearPayload,defaultErrorMessage);
   headersDict = dict("string"); 
   response="";
   //Trigger the web service to Clear Renewal_Staging table
   response = urldatabypost(soapendpoint,quoteRequestrenewalStagingClear, "error",headersDict);

val = split(res,"~");
quotedetailsize = sizeofarray(val);
//result = "Quote Number: " + val[0] + " and Opportunity: " + val[1] + " is created";
if(sizeofarray(val) == 2){
result = res + "~" + "Quote and Opty Created";
return result;
}
elif(find(res,"CPQ-") > 0){
result = res + "~" + "Quote Created";
return result;
}
}
}
return res;