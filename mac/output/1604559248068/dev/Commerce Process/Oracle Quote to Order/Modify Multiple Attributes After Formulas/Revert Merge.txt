/***********************************************************
Function Name : Revert Merge
Name : Ravi Kumar
Description : To Revert the Merge Action
**********************************************************/

response="";
strdocNum="";
strmodels="";
payload =dict("string");
headersDict = dict("string"); 
str1=encodebase64("Integration:Welcome@01");

bsID ="";
auth="Basic" + " " + str1;

soapendpoint = "https://avagotechtest2.bigmachines.com/v2_0/receiver/commerce/oraclecpqo";
filelocation="/bmfsweb/avagotechtest2/image/Integration/RemoveFromTransactionMergeQuote.xml";

linesTobeDeleted = jsonarray(mergedQuotes);
modelsTobeDeleted = jsonarray(mergedModels);

jsonArrayIndex = range(jsonarraysize(linesTobeDeleted));
jsonArrayIndex2 = range(jsonarraysize(modelsTobeDeleted));


jsonArrayIndex1 = range(jsonarraysize(selectedQuotes_array_t));
  /*Capturing Standalone Lines Document Numbers*/
  for eachIndex1 in jsonArrayIndex1{
  jsonSelectedObj1 = jsonarrayget(selectedQuotes_array_t, eachIndex1, "json");
  selectedRow = jsonget(jsonSelectedObj1, "selectQuotes_t", "string");
  if(selectedRow == "True" or selectedRow == "true"){
   quoteID = jsonget(jsonSelectedObj1, "quotes_t", "string");

  for eachIndex in jsonArrayIndex{
  jsonSelectedObj = jsonarrayget(linesTobeDeleted, eachIndex, "json");
  quoteno = jsonget(jsonSelectedObj, "_quote_ID", "string");
  if(quoteID == quoteno){
  
  documentno = jsonget(jsonSelectedObj, "_document_number", "string");
  bsID = jsonget(jsonSelectedObj, "_bsID", "string");
  strdocNum = strdocNum + documentno + ",";
  }}}}
  /*Capturing Model Lines Document Numbers*/
  for eachIndex1 in jsonArrayIndex1{
  jsonSelectedObj1 = jsonarrayget(selectedQuotes_array_t, eachIndex1, "json");
  selectedRow = jsonget(jsonSelectedObj1, "selectQuotes_t", "string");
  if(selectedRow == "True" or selectedRow == "true"){
   quoteID = jsonget(jsonSelectedObj1, "quotes_t", "string");
  
  for eachIndex2 in jsonArrayIndex2{
  jsonSelectedObj2 = jsonarrayget(modelsTobeDeleted, eachIndex2, "json");
  quoteno = jsonget(jsonSelectedObj2, "_quote_ID", "string");
  if(quoteID == quoteno){
  
  documentno = jsonget(jsonSelectedObj2, "_document_number", "string");
  bsID = jsonget(jsonSelectedObj2, "_bsID", "string");
  strdocNum = strdocNum + documentno + ",";
  }
  }}}
  
  /*Remove extra , at end*/
  strdocNum = substring(strdocNum ,0,(len(strdocNum)-1));
  
  put(payload,"bsid", bsID);
  put(payload,"documentnumber", strdocNum);
  defaultErrorMessage="";
  quoteRequest=applytemplate(fileLocation,payload,defaultErrorMessage);
  
  put(headersDict,"Content-Type","text/xml;charset=UTF-8"); 
  put(headersDict,"Authorization",auth);
  response="";
  /*Trigger Remove Transaction Service Call*/
  response = urldatabypost(soapendpoint,quoteRequest, "error",headersDict);
  
  
  return "";