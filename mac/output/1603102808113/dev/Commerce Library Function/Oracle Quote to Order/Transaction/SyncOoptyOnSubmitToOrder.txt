/*********************************************************************
              Function Name: AutoCalltoSyncToOpty
              Description: This function is used to call sync to oopty and sync to account on submit to otder
              Author: Rohit Ranjan
              User Story #:SYMINT-3129
              Date: 8th Jan 2020
              ******************************Change Log*****************************
           
*********************************************************************/
//Initialization of attributes

ret="";
BatchNumber=0;
batchCheck=0;
url="";
Credentials="";

//Fetching credentials detail from data table
credResults=bmql("select Username,Password,SoapEndpoint from INT_SYSTEM_DETAILS where System='Create_Renewal_Trans_REST'");
 
for result in credResults
{
 Credentials_sb=stringbuilder();
 Credentials_sb = sbappend(Credentials_sb, get(result,"Username"), ":", get(result,"Password"));
 Credentials=sbtostring(Credentials_sb);
 url=get(result,"SoapEndpoint");
 } 
//Rest API Header details
http_Method="POST";
headersDict = dict("string"); 
put(headersDict,"Content-Type","application/json");
encodecredential=encodebase64(Credentials);
authstring="Basic " + encodecredential; 
put(headersDict,"Authorization",authstring);
response=Dict("string");
counter=0; 

//Calling save and sync action for a particular transaction with oopty Id or without OpptyId
TransactionID = bs_id;
optyID=opportunityID_t; 
//Checking if quote is created from Oopty or Account directly based on that we will sync to oopty and sync to account button
if(optyID<>"")
 { 
 GETURL_sb = stringbuilder();
 GETURL_sb = sbappend(GETURL_sb, url, "/", TransactionID,"/actions/saveAndSyncItems_bmClone_1");
 GETURL=sbtostring(GETURL_sb);      
 response = urldata(GETURL,http_Method,headersDict,""); 
  }
else
 {
 GETURL_sb = stringbuilder();
 GETURL_sb = sbappend(GETURL_sb, url, "/", TransactionID,"/actions/updateAccount_ct");
 GETURL=sbtostring(GETURL_sb); 
 response = urldata(GETURL,http_Method,headersDict,"");
   
}
return "";