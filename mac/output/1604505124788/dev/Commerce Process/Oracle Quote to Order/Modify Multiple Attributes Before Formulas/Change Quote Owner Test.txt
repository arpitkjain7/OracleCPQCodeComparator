newQuoteOwner = "";
newQuoteOwner1 = "";
data = "";
isValidQuoteOwner = "";
salesRegion = "";
salesArea = "";
salesOrg = "";
userLogin = "";
resetRenewalHDRFlagValue = "";
creator = createdBy_t;
for line in transactionLine
{
if(line._part_number=="Cust" or line._model_name=="Customer Search")
 {
  obj=json();
  
  if(line._line_item_comment<>"") 
  {
  teststring=line._line_item_comment;
   obj=json(teststring);
   
   quoteOwnerDetails=jsonget(obj,"Quote_Owner");
   
   if(isnull(quoteOwnerDetails)<>true)
   {
   print "==============";
   
   print "quoteOwnerDetails";
   print "==============";
    quoteOwnerName = jsonget(json(quoteOwnerDetails), "QuoteOwner");
    quoteOwnerEmail = jsonget(json(quoteOwnerDetails), "Quoteemail"); 
    
    newQuoteOwner = quoteOwnerName + "~" + quoteOwnerEmail;
    
    print newQuoteOwner;
   }
  }
  
 }
}

newOwnerArr = split(newQuoteOwner,"~");
newOwnerEmail = newOwnerArr[1];
newOwnerName = newOwnerArr[0]; 
isChangeOwner = isChangeOwner_t;
existingOwnerEmailId = QuoteownerEmail_t;

if(newQuoteOwner <> "")
 {
 resultSet = bmql("select Users, SalesRegion, SalesArea, SalesOrg, User_login from BRCM_Users where EMailID=$newOwnerEmail");
 count = 0;
 for each in resultSet
  {
  newOwner = get(each,"Users");
  salesRegion = get(each,"SalesRegion");
  salesArea = get(each,"SalesArea");
  salesOrg = get(each,"SalesOrg");
  userLogin = get(each,"User_login");
  
  count = count + 1;
  break;
  }
 if(count > 0)
  {
  isChangeOwner = "NO";
  //Added the attribute owner_t for Jira ID:VIPER-119 to fetch the name of the quote owner who has submitted the quote
  //sb1 = stringbuilder(result, "1~quoteOwner_t~", newOwnerName, "|", "1~owner_t~", newOwnerName, "|","1~quoteOwnerRegion_t~", salesRegion,"|","1~quoteOwnerSubRegion_t~",salesArea,"|","1~quoteOwnerGEO_t~",salesOrg,"|","1~isChangeOwner_t~",isChangeOwner,"|","1~salesRepId_t~",userLogin,"|","1~QuoteownerEmail_t~",newOwnerEmail,"|","");
  data = data + "<bm:quoteOwner_t>"+newOwnerName+"</bm:quoteOwner_t>";
  data = data + "<bm:owner_t>"+newOwnerName+"</bm:owner_t>";
  data = data + "<bm:quoteOwnerRegion_t>"+salesRegion+"</bm:quoteOwnerRegion_t>";
  data = data + "<bm:quoteOwnerSubRegion_t>"+salesArea+"</bm:quoteOwnerSubRegion_t>";
  data = data + "<bm:quoteOwnerGEO_t>"+salesOrg+"</bm:quoteOwnerGEO_t>";
  data = data + "<bm:isChangeOwner_t>"+isChangeOwner+"</bm:isChangeOwner_t>";
  data = data + "<bm:salesRepId_t>"+userLogin+"</bm:salesRepId_t>";
  data = data + "<bm:QuoteownerEmail_t>"+newOwnerEmail+"</bm:QuoteownerEmail_t>";
  //data = data + "<bm:quoteOwner_t>"+newOwnerName+"</bm:quoteOwner_t>";
  //result = sbtostring(sb1);
  }
 }
 
 elif(QuoteownerEmail_t <> "") 
 {
 res = bmql("select SalesRegion,SalesArea,SalesOrg,User_login from BRCM_Users where EMailID= $existingOwnerEmailId");
 for each in res
  {
  salesregion = get(each, "SalesRegion");
  salesarea = get(each, "SalesArea");
  salesorg = get(each, "SalesOrg");
  userLogin = get(each,"User_login");
  break;
  }
  //Added the attribute owner_t for Jira ID:VIPER-119 to fetch the name of the quote owner who has submitted the quote
 //sb1 = stringbuilder(result, "1~quoteOwnerRegion_t~", salesRegion, "|", "1~quoteOwnerSubRegion_t~", salesArea, "|", "1~quoteOwner_t~", creator, "|","1~owner_t~", creator, "|", "1~quoteOwnerGEO_t~",  salesOrg, "|","1~salesRepId_t~",userLogin,"|","1~QuoteownerEmail_t~",existingOwnerEmailId,"|","1~autoGeneratedRenewalHDRFlag~", resetRenewalHDRFlagValue, "|","");
 data = data + "<bm:quoteOwnerRegion_t>"+salesRegion+"</bm:quoteOwnerRegion_t>";
  data = data + "<bm:quoteOwnerSubRegion_t>"+salesArea+"</bm:quoteOwnerSubRegion_t>";
  data = data + "<bm:quoteOwner_t>"+creator+"</bm:quoteOwner_t>";
  data = data + "<bm:owner_t>"+creator+"</bm:owner_t>";
  data = data + "<bm:quoteOwnerGEO_t>"+salesOrg+"</bm:quoteOwnerGEO_t>";
  data = data + "<bm:autoGeneratedRenewalHDRFlag>"+resetRenewalHDRFlagValue+"</bm:autoGeneratedRenewalHDRFlag>";
  data = data + "<bm:salesRepId_t>"+userLogin+"</bm:salesRepId_t>";
  data = data + "<bm:QuoteownerEmail_t>"+existingOwnerEmailId+"</bm:QuoteownerEmail_t>";
 //result = sbtostring(sb1);
 }
 
 /*if(trim(newQuoteOwner) <> "" and NOT isnull(newQuoteOwner))
 {
 //sb1=sbappend(sb1,"1",dlim,"newQuoteOwner_t",dlim,newQuoteOwner,dend);
 data = "<bm:newQuoteOwner_t>"+newQuoteOwner+"</bm:newQuoteOwner_t>";
 //data = data + "<bm:newQuoteOwner>"+newQuoteOwner1+"</bm:newQuoteOwner>";
 print data;
 resultSave = commerce.aDHOC_SAVE(bs_id, data);
 }*/
 data = data + "<bm:newQuoteOwner_t>"+newQuoteOwner+"</bm:newQuoteOwner_t>";
 res = commerce.mergeSave(data);
 
 return "1~newQuoteOwner~"+newQuoteOwner1+"|";