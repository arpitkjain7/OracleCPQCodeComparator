/************************************************************************************************************
Description: Updating the approval flag as false if line has customer specific pricing and doesn't have any discount applied
Param:       
Return type: string
History:     Date          Author            Comment 
    02/05/2019    Kavita Lolla         Initial version
    04/03/2019    Kavita Lolla   Updating the approval flag as false if line is a renewal
    05/09/2019    Satyabrata Acharya   Optimized code to align with best practices and used string builder
************************************************************************************************************/
Customer = _transaction_customer_id;
BillTo = billToCustomerId_t;
EndCust = soldToCustomerAccountID_t;
approveFlag = false;
renewalFlag = true;
capacityFlag = true;
result = "";
dDRFlag = false;

if(startswith(dealType_t,"bSN"))
 {
 if (totalValueUSD_t > 250000)
  {
  dDRFlag = true;
  }
 }
if(dDRFlag == false)
 {
 if(restrictedCustomerFlag_t)
  {
  dDRFlag = true;
  }
 }

for line in transactionLine
 {
 flag = true;
 part=line._part_number;
 
 if(part <> ""  and line._part_number <> "Cust")
  {
  if(quoteType_t == "renewalQuote" and upper(line.transactionTypeM_l) <> "NEW"  and line.transactionTypeM_l <> "")
   {
   flag = true;
   sb1=stringbuilder(result,line._document_number, "~approvalFlag_l~", String(flag), "|");
   result=sbtostring(sb1);
   }
  else
   {
   CustomerAccountArray = String[]{Customer,BillTo,EndCust};
   resultset=bmql("SELECT MPN,Item_Price FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No IN $CustomerAccountArray");
   for res in resultset
    {
    price = get(res,"Item_Price");
    if(price <> "")
     {
     flag = false;
     }
    }
   if(flag == false)
    {
    if(line.requestedDiscount_l <> 0.0)
     {
     flag = true;
     }
    }
   if(flag == true)
    {
    if( line.noBid_l == true)
     {
     flag = false;
     }
    }
   if(flag and part == "Cust")
    {
    flag = false;
    }
   if(line.proposedNetUnitPriceRequested_l > 0 and line.perUnitPerListPrice_l == 0)
    {
    flag = true;
    }
   sb1=stringbuilder(result,line._document_number, "~approvalFlag_l~", String(flag), "|");
   result=sbtostring(sb1);
   }
  if((flag and line.proposedNetUnitPriceRequested_l < line.salesMin1_l) or (flag and line.proposedNetUnitPriceRequested_l > 0 and line.perUnitPerListPrice_l == 0))
   {
   approveFlag = true;
   } 
  if(dDRFlag == false)
   {
   if(startswith(line.isDiscountable_l,"N"))
    {
    dDRFlag = true;
    }
   resultset = bmql("select Restricted from BRCM_Part_Master_Prc where MPN = $part");
   restFlag = "";
   for record in resultset 
    {
    restFlag = get(record,"Restricted");
    } 
   if(restFlag == "Y")
    {
    dDRFlag = true;
    }
   }
  }
 }
if(NOT startswith(dealType_t,"bSN"))
 {
 dDRFlag = false;
 }
if(renewalFlag)
 {
 if(aRR_t > 100)
  {
  renewalFlag = false;
  }
 }
if(capacityFlag and NOT capacityDeviation_t)
 {
 capacityFlag = false;
 }
 
sb2=stringbuilder(result,"1~renewalApprovalFlag_t~", String(renewalFlag), "|", "1~capacityApprovalFlag_t~", String(capacityFlag), "|", "1~lineApprovalFlag_t~", String(approveFlag), "|", "1~dDRFlag_t~", String(dDRflag), "|");
result=sbtostring(sb2);

return result;