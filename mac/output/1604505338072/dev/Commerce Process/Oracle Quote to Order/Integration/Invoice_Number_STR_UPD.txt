result = "";
dlim="~";
dend="|";
sb = stringbuilder();
invoiceScheduleID = "";  //added
invoiceNumber_t="";    //added
// VIPER - 857 - Begin - Added new string attribute for invoioce number
invoiceNumber_STR_t=""; //added
invoiceDateSetting_t="";   //added
invoiceStatus_t="";   //added
billingSchedule = jsonarray();
if(status_t == "ORDER_SUBMITTED" AND paymentPlan_t == "paidInFull")
{
 if(jsonarraytostr(newBillingSchedule_t) <> "[]")
 {
  /*payment = json();
  row = jsonarrayget(newBillingSchedule_t, 0, "json");
  rowScheduleID = jsonget(row,"scheduleID", "string","");
  rowInvoiceNumber = jsonget(row,"invoiceNumber_t", "string","");
  jsonput(payment,"scheduleID",rowScheduleID);
  jsonput(payment,"invoiceNumber_STR_t",rowInvoiceNumber);
  jsonarrayappend(billingSchedule, payment);
  sbappend(sb,_transaction_document_number,dlim,"newBillingSchedule_t",dlim,jsonarraytostr(billingSchedule),dend);*/
  payment = json();
  row = jsonarrayget(newBillingSchedule_t, 0, "json");
  rowScheduleID = jsonget(row,"scheduleID", "string","");
  rowDate = jsonget(row,"billingDate", "string","");
  rowLicenseFee = jsonget(row,"licenseFee", "float",0.0);
  rowMaintenanceFee = jsonget(row,"maintenanceFee", "float",0.0);
  rowCommittedPayments = jsonget(row,"committedPayments", "float",0.0);
  rowTotalFees = jsonget(row,"totalFee", "float",0.0);
  //rowInvoiceNumber = jsonget(row,"invoiceNumber_t", "integer",0);
  // VIPER - 857 - Begin - assigning new string invoice number with the corresponding value
  rowInvoiceNumber = jsonget(row,"invoiceNumber_t", "string","");
  // VIPER - 857 - End
  rowDateSetting = jsonget(row,"invoiceDateSetting_t", "string","");
  rowInvoiceStatus =  jsonget(row,"invoiceStatus_t", "string","");
  
  jsonput(payment,"scheduleID",rowScheduleID);
  jsonput(payment,"billingDate",rowDate);
  jsonput(payment,"licenseFee",rowLicenseFee);
  jsonput(payment,"maintenanceFee",rowMaintenanceFee);
  jsonput(payment,"committedPayments",rowCommittedPayments);
  jsonput(payment,"totalFee",rowTotalFees);
  jsonput(payment,"invoiceNumber_t",rowInvoiceNumber);
  // VIPER - 857 - Begin - updating new string invoice number with the corresponding value
  if(NOT isnull(rowInvoiceNumber) AND trim(rowInvoiceNumber) <> "")
  {
   jsonput(payment,"invoiceNumber_STR_t",rowInvoiceNumber);
  }
  // VIPER - 857 - End
  jsonput(payment,"invoiceDateSetting_t",rowDateSetting);
  jsonput(payment,"invoiceStatus_t",rowInvoiceStatus);
  
  if(rowScheduleID == invoiceScheduleID){
   //jsonput(payment,"invoiceNumber_t",invoiceNumber_t); 
   // VIPER - 857 - Begin - updating new string invoice number with the corresponding value
   jsonput(payment,"invoiceNumber_STR_t",invoiceNumber_t);
   // VIPER - 857 - End 
   jsonput(payment,"invoiceDateSetting_t",invoiceDateSetting_t);
   jsonput(payment,"invoiceStatus_t",invoiceStatus_t);
  }
  
  jsonarrayappend(billingSchedule, payment);
  sbappend(sb,_transaction_document_number,dlim,"newBillingSchedule_t",dlim,jsonarraytostr(billingSchedule),dend);
  
  result = sbtostring(sb);
 }
}
return result;