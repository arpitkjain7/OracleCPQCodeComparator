/********************************************************************
Rule Name: Constraining Address Selection
Description: This BML function is used to constraint address selection if default is not selected for each Address Purpose.
Author: Kumar Satyabrata Acharya
********************************************************************/

Arrayrange=range(selectedAddressesArrayControl_avg);
Shiptocounter=0;
Billtocounter=0;
Selltocounter=0;
truecounter=0;
falsecounter=0;
SHIPTO=String[];
BILLTO=String[];
SELLTO=String[];
For each in Arrayrange
 {
   If(selectedAddressPurpose_avg[each]=="SHIP_TO"){
   SHIPTO[Shiptocounter]=String(defaultInstallAtselected_avg[each]);
   Shiptocounter=Shiptocounter+1;
   }
   If(selectedAddressPurpose_avg[each]=="SELL_TO"){
   SELLTO[Selltocounter]=String(defaultInstallAtselected_avg[each]);
   Selltocounter=Selltocounter+1;
   }
   If(selectedAddressPurpose_avg[each]=="BILL_TO"){
   BILLTO[Billtocounter]=String(defaultInstallAtselected_avg[each]);
   Billtocounter=Billtocounter+1;
   }
 }
Shiptorange=range(Shiptocounter);
Selltorange=range(Selltocounter);
Billtorange=range(Billtocounter);
if(isnull(Billtorange)<>true)
{
for res in Billtorange
{
 if(BILLTO[res]=="true")
 { 
  truecounter=truecounter+1;
 }
 if(truecounter>1)
 {
  return true;
 }
 if(BILLTO[res]=="false")
 {
  falsecounter=falsecounter+1;
  
 }
 
 if(falsecounter==sizeofarray(BILLTO))
 {
  
  return true;
 }
}
}
truecounter=0;
falsecounter=0;
if(isnull(Shiptorange)<>true)
{
for res in Shiptorange
{
 if(SHIPTO[res]=="true")
 {
  truecounter=truecounter+1;
 }
 if(truecounter>1)
 {
  return true;
 }
 if(SHIPTO[res]=="false")
 {
  falsecounter=falsecounter+1;
 
 }
 if(falsecounter==sizeofarray(SHIPTO))
 {
  return true;
 }
}
}
truecounter=0;
falsecounter=0;
if(isnull(Selltorange)<>true)
{
for res in Selltorange
{
 if(SELLTO[res]=="true")
 {
  truecounter=truecounter+1;
 }
 if(truecounter>1)
 {
  return true;
 }
 if(SELLTO[res]=="false")
 {
  falsecounter=falsecounter+1;
 }
 if(falsecounter==sizeofarray(SELLTO))
 {
  return true;
 }
}
}
return false;