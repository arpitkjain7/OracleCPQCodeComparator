/********************************************************************
Function Name: Validate Support Types on Line Items
Description: This library function is used to show error when premium and essential support types are added simultaneously
Author: Raghavendra
Date: 11 March 2019
********************************************************************/
/*isPresentInPremierCodes = false;
isPresentInEssentialCodes = false;

resultSet1 = bmql("select Support_Level,Support_Type_Code from BRCM_Support_Rate where Support_Level Like '%Premier%' or Support_Level Like '%Premium%'");
resultSet2 = bmql("select Support_Level,Support_Type_Code from BRCM_Support_Rate where Support_Level Like '%Essential%'");

premierSupportCodesDictionary = Dict("string");
EssentialSupportCodesDictionary = Dict("string");

for each_record in resultSet1
{
 supportTypeCode = get(each_record,"Support_Type_Code");
 put(premierSupportCodesDictionary, supportTypeCode, supportTypeCode);
}

for each_record in resultSet2
{
 supportTypeCode = get(each_record,"Support_Type_Code");
 put(EssentialSupportCodesDictionary, supportTypeCode, supportTypeCode);
}

for line in transactionLine
{
 if(line._part_number <> "" and line.supportType_l <> "")
 {
  if(containsKey(premierSupportCodesDictionary,line.supportType_l))
  {
   isPresentInPremierCodes = true;
  }
  elif(containsKey(EssentialSupportCodesDictionary,line.supportType_l))
  {
   isPresentInEssentialCodes = true;
  }
  
  if(isPresentInEssentialCodes and isPresentInPremierCodes)
  {
    return true;
  }
 }
}
return false;*/
return validateSupportTypesOnLineItemsFlag_t;