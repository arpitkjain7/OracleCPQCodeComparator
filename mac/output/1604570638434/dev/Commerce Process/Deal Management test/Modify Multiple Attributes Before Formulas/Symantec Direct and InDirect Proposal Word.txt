/*
Desc: logic written to populate symantec tables based on line level logic
Created by : Shruti
Date : Nov-19

// change done by shruti on 28th Jan 2020 for SYMINT-4175 to include upgrade tarnsaction type
*/


softwareWithEnvironment=0;
softwareWithoutEnvironment=0;
hardwarePremise=0;
saaSCloudService=0;

result="";
dlim="~";
dend="|";


// code written by Shruti to set attributes which will be used for conditionalities in Symantec Document 

for line in transactionLine{

//change done by shruti on 28th Jan 2020 for SYMINT-4175 to include upgrade tarnsaction type
                               
                                if(line.productGroup_l == "Software" AND NOT(line.dropProduct_l) AND NOT(line.coveredProduct_l<>"" AND (line.transactionTypeM_l=="New" or line.transactionTypeM_l=="Capacity"))){
                                if(line.enterEnvironment_l<>"")
                                {
                                softwareWithoutEnvironment=softwareWithoutEnvironment+1;
                                }
                              
                                softwareWithEnvironment = softwareWithEnvironment + 1;
                                
                                }
                                
                                
                                elif(line.productGroup_l == "Hardware" AND NOT(line.dropProduct_l) AND NOT(line.coveredProduct_l<>"" AND (line.transactionTypeM_l=="New" or line.transactionTypeM_l=="Capacity" or line.transactionTypeM_l=="Upgrade"))){
                                hardwarePremise = hardwarePremise + 1;
                                }
                                elif(line.productGroup_l == "SaaS" AND NOT(line.dropProduct_l) AND NOT(line.coveredProduct_l<>"" AND (line.transactionTypeM_l=="New" or line.transactionTypeM_l=="Capacity"))){
                                saaSCloudService = saaSCloudService + 1;
                                }
                
                
                                
                
                                
                }
address1="";
address2="";
address3="";

              headerRecord=bmql("Select OU,Address1,Address2,Address3 from BRCM_Headers where OU=$operatingUnit_t");
           
              for eachRecord in headerRecord{
              address1= get(eachRecord,"Address1");
                               address2= get(eachRecord,"Address2");
                                address3= get(eachRecord,"Address3");
      }
     
newOwnerEmail = "";
     
     if(newQuoteOwner_t <> ""){
          newOwner = newQuoteOwner_t;
                newOwnerArr = split(newOwner,"~");
                newOwnerEmail = newOwnerArr[1];
                }
                else{
                newOwnerEmail = QuoteownerEmail_t;
                }
                
                
     emailID = "" ; 
     title = "" ; 
     phNo = "" ;      
     resultSet = bmql("select User_Title, User_PhoneNo, EMailID from BRCM_Users where EMailID=$newOwnerEmail");
     for each in resultSet{
                emailID= get(each,"EMailID");
                                title= get(each,"User_Title");
                                phNo= get(each,"User_PhoneNo");
     }
    
           

sb = stringbuilder();
sbappend(sb,"1~softwareWithEnvironment_t~",string(softwareWithEnvironment),"|","1~hardwarePremise_t~",string(hardwarePremise),"|","1~saaSCloudService_t~",string(saaSCloudService),"|","1~softwareWithoutEnvironment_t~",string(softwareWithoutEnvironment),"|");





sbappend(sb,"1~headerLegalAddress_t~",address1,"|","1~headerLegalAddress1_t~",address2,"|","1~headerLegalAddress2_t~",address3,"|");

sbappend(sb,"1~QuoteownerEmail_t~",emailID,"|","1~quoteOwnerPhoneNumber_t~",phNo,"|","1~quoteOwnerTitle_t~",title,"|");

result = sbtostring(sb);   

return result;