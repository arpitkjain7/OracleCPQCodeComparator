/************************************************
Rule Name: Renew Quote
Description: This function calls addPartsToTransaction util which would add standalone line items from child quote to parent quote 
Author: M Vamsi Krishna
Creation Date: 22-Feb-2019
***********************************************/
retString = "";
xpaths = string[1];
segmentName = "";
productLineName = "";
modelName = "";
modelVarName = "";
modelArray = string[];
partLineDocumnetNo = jsonarray();
finalstring = "";
JsonMergedQuotes = jsonarray();
if(quotationList_t <> "" and quotationList_t <> " " and NOT isnull(quotationList_t)){
 jsonObj = json(quotationList_t);
 
 jsonArrayIndex = range(jsonarraysize(selectedQuotes_array_t));
 
 for eachIndex in jsonArrayIndex{
  jsonSelectedObj = jsonarrayget(selectedQuotes_array_t, eachIndex, "json");
  selectedRow = jsonget(jsonSelectedObj, "selectQuotes_t", "string");
  if(selectedRow == "True" or selectedRow == "true"){
   quoteID = jsonget(jsonSelectedObj, "quotes_t", "string");
 
   bsID = jsonget(jsonObj, quoteID, "string");
   result = util.getTransactions(bsID);
  
   if(containskey(result, "ERROR")){
    retString = get(result, "ERROR");
   }elif(containskey(result, "SUCCESS")){
    xmlResponse = get(result, "SUCCESS");
    
    subDocStartPosition = find(xmlResponse, "<bm:sub_documents>");
    subDocEndPosition = find(xmlResponse, "</bm:sub_documents>");
    subDocument = substring(xmlResponse, subDocStartPosition+len("<bm:sub_documents>"), subDocEndPosition+len("</bm:sub_documents>"));
    jsonArrayObj = jsonarray();
    lineArray = split(subDocument,"</bm:transactionLine>");
    resultAttributeArray = string[];
    jsonArrayObj=jsonarray();
    for each in lineArray
    {
    modelattr=find (each, "<bm:_model_name>");
    modelparentattr=find (each, "<bm:_parent_line_item>");
    if(modelattr==-1 and modelparentattr==-1)
    {
    jsonObj = json();
     
     
     details = substring(each,find(each,"</bm:_price_book_var_name>")+26);
     number="";
     partnumStartPosition = find(details, "<bm:_part_number>");
     partnumEndPosition = find(details, "</bm:_part_number>");
     
     number= substring(details, partnumStartPosition+len("<bm:_part_number>"), partnumEndPosition);
     
     if(number<>"")
     {
     details_1=replace(details,bsID,bs_id);
     jsonput(jsonObj,"partNumber",number);
     jsonput(jsonObj,"quantity",1);
     
     jsonarrayappend(jsonArrayObj,jsonObj);
     
     resultAttributeArray[0] = "_document_number";
     resultAttributeArray[1] = "_part_number";
     resultAttributeArray[2] = "_price_quantity";
     
     }
     
    }
    }
    response = addpartstotransaction(jsonArrayObj, resultAttributeArray);
    
    strvar = jsonarraytostr(response);
    finalstring = finalstring + strvar;
    partLineDocumnetNo = jsonarray(finalstring);
    jsonArrayIndex1 = range(jsonarraysize(partLineDocumnetNo));
    for eachIndex1 in jsonArrayIndex1{
    jsonSelectedObj = jsonarrayget(partLineDocumnetNo, eachIndex1, "json");
    selectedRow = jsonget(jsonSelectedObj, "_document_number", "string");
    mergedQuotes = json();
    jsonput(mergedQuotes, "_bsID",bs_id);
    jsonput(mergedQuotes, "_quote_ID", quoteID);
    jsonput(mergedQuotes, "_document_number", selectedRow);
    jsonarrayappend(JsonMergedQuotes, mergedQuotes);
    
    }

   }
  }
 } 
 
}
retString = retString + "1~mergedQuotes~" + jsonarraytostr(JsonMergedQuotes);

return retString;