/*******************************************************************
27/05/2020 Kavita Lolla VIPER-852 : Missing document link in
    Final Approval Template 
*******************************************************************/

linkURL = "";

document_id = "36244074";
action_id_open = "36244076";
process_id = "36244034";

 

linkURL = "https://" + _system_supplier_company_name;
linkURL = linkURL + ".bigmachines.com/commerce/buyside/document.jsp?formaction=performAction";
linkURL = linkURL + "&document_id=" + document_id;
linkURL = linkURL + "&action_id=" + action_id_open;
linkURL = linkURL + "&bm_cm_process_id=" + process_id;
linkURL = linkURL + "&id=" + _system_buyside_id;

return linkURL;
//************************************************************************************************************
//** Description: Function fetch the updated value of payment term from OEC on click of submit to order
//**
//** Return type: string dict
//**
//** History:     Date          Author                     Story  -  Comment 
//**              ------------- -----------------------    -------------------------------------------------------------
//**              16/08/2019     Rohit Ranjan              Fetches payment term value on click of submit to order button using rest API for VIPER-22
//************************************************************************************************************
//Initializing the variables

url="";
paymentTerm="";
Credentials="";
partyId=_transaction_customer_id;
// Fetching the credential and path of soap end point, file manager from data table
if(partyId<>""){
 results=bmql("select Username,Password,SoapEndpoint from INT_SYSTEM_DETAILS where System='Create_Opportunity'"); 
 for res in results{
  Credentials_sb=stringbuilder();
  Credentials_sb = sbappend(Credentials_sb, get(res,"Username"), ":", get(res,"Password"));
  Credentials=sbtostring(Credentials_sb);
  url=get(res,"SoapEndpoint");
  }
 //Rest API http method to fetch response based on party ID containing payment term value
  GETURL_sb=stringbuilder();
  GETURL_sb=sbappend(GETURL_sb,url,"/crmRestApi/resources/latest/accounts?q=PartyId="+partyId+"&fields=OrganizationDEO_BRCM_PaymentTerms_c&onlyData=True");
  GETURL=sbtostring(GETURL_sb);  
  
  //Rest API Header details
  headersDict = dict("string"); 
  put(headersDict,"Content-Type","application/json");
  encodecredential=encodebase64(Credentials); 
  authstring="Basic " + encodecredential;
  put(headersDict,"Authorization",authstring);
  paymentResponse=Dict("string");
  paymentResponse = urldata(GETURL,"GET",headersDict, ""); 
  //Converting the response string into json and fetching net payment term value 
  if(isnull(paymentResponse)<>true){
   responseStr= get(paymentResponse,"Message-Body"); 
   responseJsonObj=json(responseStr);
   Payment_termarray=jsonpathgetmultiple(responseJsonObj,"$..OrganizationDEO_BRCM_PaymentTerms_c");  
   if(jsonarraysize(Payment_termarray)>0){
    PaymentTerm=jsonarrayget(Payment_termarray,0);
   }
  }
}
 return PaymentTerm;
//************************************************************************************************************
//** Description: To check whether if we require DDR review
//** 
//** Param:       Apttus required, Payment Plan, Deal Term
//**
//** Return type: boolean
//**
//** History:     Date          Author          Comment 
//**              ------------- --------------- --------------------------------------------------------------
//**              02/01/2019                     Initial version
//************************************************************************************************************

retBool = false;
specialMetric = false;
coreTypeContractBool = false;



if(isnumber(dealTerm_t) and core_t == "ZCA_CORE"){
 if(atof(dealTerm_t) > 0 and totalOneTimeNetAmount_t> 0){
  monthlyContractValue = totalOneTimeNetAmount_t/atof(dealTerm_t);
  yearlyContractValue = monthlyContractValue * 12;
  if(yearlyContractValue > 500000){
   coreTypeContractBool = true;
  }
 }


if(apttusRequired_t == "yES" or (isnumber(dealTerm_t) and atof(dealTerm_t) > 36 and core_t == "ZCA_CORE") or coreTypeContractBool){
 retBool = true;
}

}
if(apttusRequired_t == "yES" and core_t == "ZCA_NON_CORE") {
    retBool = true;
}
return retBool;