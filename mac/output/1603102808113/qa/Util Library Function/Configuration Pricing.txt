/*********************************************************************
              Function Name: ConfigurationPricing
              Description: This library function is used to calculate Base price for selected products in a quote.
              Author: Acharya Kumar Satyabrata
              User Story #:
              Date: 19th Dec 2018
              ******************************Change Log*****************************
              
*********************************************************************/



result=dict("string");
Accounts=Split(AccountNo,"~");
Customer=Accounts[0];
BillTo=Accounts[1];
EndCust=Accounts[2];
EndCustParent=Accounts[3];
EndCustGrandParent=Accounts[4];
EffectiveStartDate=getDate();
mpnDict=dict("string");
EndDate=getDate();
currdate=getDate();
Quote="CPQ-0000";
Parent_Quote="CPQ-0000";
GrandParent_Quote="CPQ-0000";
CPN=Accounts[5];
if(Accounts[6]<>""){
 EffectiveStartDate=strtojavadate(Accounts[6],"yyyy-MM-dd HH:mm:ss");
}
if(Accounts[7]<>""){
 EndDate=strtojavadate(Accounts[7],"yyyy-MM-dd HH:mm:ss");
}
quotenumDict=Dict("string");
CustomerAccountNoDict=Dict("string");
CPNDict=Dict("string");
ItemPriceDict=Dict("string");
RouteToMarket=Accounts[8];
BillToParent=Accounts[9];
BillToGrandParent=Accounts[10];
Quotetype=Accounts[11];
part="";
counter=0;
partKeys=keys(PartDict);

partValues=values(PartDict);
count = 0;
resCheck=bmql("SELECT MPN FROM BRCM_Cust_Pricelist WHERE Customer_Account_No=$BillTo or Customer_Account_No=$EndCust or Customer_Account_No=$EndCustParent or Customer_Account_No=$EndCustGrandParent or Customer_Account_No=$BillToParent or Customer_Account_No=$BillToGrandParent");
for res in resCheck{
 count = count + 1;
 if(count==1){
  break;
 }
}
/*resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date,Customer_Account_No,CPN FROM BRCM_Cust_Pricelist WHERE MPN in $partValues ORDER BY ContractNumber DESC");

for resset in resultset
{
 if(get(resset,"Price_Start_Date")<>"" AND get(resset,"Price_End_Date")<>""){
  if(strtojavadate(get(resset,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(resset,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
  {   
  if(containskey(mpnDict,get(resset,"MPN")) == false)
  {
   put(quotenumDict, get(resset,"MPN"), get(resset,"Quote_Num"));
   put(CustomerAccountNoDict, get(resset,"MPN"), get(resset,"Customer_Account_No"));
   put(CPNDict, get(resset,"MPN"), get(resset,"CPN"));
   put(ItemPriceDict, get(resset,"MPN"), get(resset,"Item_Price"));
   put(mpnDict,get(resset,"MPN"),get(resset,"MPN"));
   
   
  }

   
  }
}
}*/


for each in partKeys
{ counter=0;
 part=get(PartDict,each);
 if((Quotetype<>"contractQuote") and (count <> 0)){
 if(RouteToMarket=="tier1" or RouteToMarket =="tier2" or RouteToMarket=="mSP" or RouteToMarket=="direct"){
 

 // Checking EndCust with MPN and CPN
 resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCust AND CPN= $CPN ORDER BY ContractNumber DESC");
 for res in resultset
 {
  if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
  if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
  {
   Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
   put(result, each, Contract_Details);
   Quote=get(res,"Quote_Num");
   
   counter=counter+1;
  }
  break;
 } 
 }

 if(counter==0)
 {
  // Checking EndCust with only MPN
  resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCust AND CPN is NULL ORDER BY ContractNumber DESC");
  for res in resultset
  {
   if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
   if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
   {
    Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
    put(result, each, Contract_Details);
    Quote=get(res,"Quote_Num");
    counter=counter+1;
   }
   }
   break;
  }
  if(counter==0)
  {
   // Checking EndCustParent with MPN and CPN
   resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCustParent AND CPN= $CPN ORDER BY ContractNumber DESC");
   for res in resultset
   {
   if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
    if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
    {
     Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
     put(result, each, Contract_Details);
     Quote=get(res,"Quote_Num");
     
     counter=counter+1;
    }
    }
    break;
   }

   if(counter==0)
   {
    // Checking EndCustParent with MPN
    resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCustParent AND CPN is NULL ORDER BY ContractNumber DESC");
    for res in resultset
    {
    if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
     if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
     {
      Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
      put(result, each, Contract_Details);
      Quote=get(res,"Quote_Num");
      
      counter=counter+1;
     }
     
    }
    break;
    }
    if(counter==0)
    {   
     // Checking EndCustGrandParent with MPN and CPN
     resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCustGrandParent AND CPN= $CPN  ORDER BY ContractNumber DESC");
     for res in resultset
     {
     if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
      if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
      {
       Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
       put(result, each, Contract_Details);
       Quote=get(res,"Quote_Num");
       
       counter=counter+1;
      }
     } 
     break;
     }

     if(counter==0)
     {
      // Checking EndCustGrandParent with MPN
      resultset=bmql("SELECT Quote_Num, MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$EndCustGrandParent AND CPN is NULL ORDER BY ContractNumber DESC");
      for res in resultset
      {
      if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
       if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
       {
        Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
        put(result, each, Contract_Details);
        Quote=get(res,"Quote_Num");
        
        counter=counter+1;
       }
      }
      break; 
      }

     } 

    }
   }
  }
 }
  
 }
 if((RouteToMarket=="tier1" or RouteToMarket=="tier2" or RouteToMarket=="mSP") and counter ==0)
 { 
  
  // Checking For MPN and CPN for BillTo
  
  resultset=bmql("SELECT Quote_Num,MPN,Item_Price ,Price_Start_Date,Price_End_Date,Customer_Account_No,CPN FROM BRCM_Cust_Pricelist WHERE MPN= $part AND CPN= $CPN AND Customer_Account_No=$BillTo ORDER BY ContractNumber DESC");
  for res in resultset
  {
   if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
   if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
   {
    Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
    put(result, each, Contract_Details);
    
    counter=counter+1;
   }
   }
   break;
  }

  if(counter==0)
  {
   // Checking For MPN for BillTo
   resultset=bmql("SELECT Quote_Num,MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND CPN is NULL AND Customer_Account_No=$BillTo ORDER BY ContractNumber DESC");
   for res in resultset
   {
    if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
    if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
    {
     Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
     put(result, each, Contract_Details);
     counter=counter+1;
    }
    }
    break;
   }
   if(counter==0)
   {
    // Checking BillToParent with CPN and MPN
    resultset=bmql("SELECT Quote_Num,MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$BillToParent AND CPN=$CPN ORDER BY ContractNumber DESC");
    for res in resultset
    {
    if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
     if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
     {
      Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
      put(result, each, Contract_Details);
      counter=counter+1;
     }
     }
     break;
    }

    if(counter==0)
    {
     // Checking BillToParent with MPN
     resultset=bmql("SELECT Quote_Num,MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$BillToParent AND CPN is NULL ORDER BY ContractNumber DESC");
     for res in resultset
     {
     if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
      if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
      {
       Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
       put(result, each, Contract_Details);
       counter=counter+1;
      }
      }
      break;
     }

     if(counter==0)
     {
      // Checking BillToGrandParent with MPN and CPN

      resultset=bmql("SELECT Quote_Num,MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$BillToGrandParent AND CPN= $CPN ORDER BY ContractNumber DESC");
      for res in resultset
      {
      if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
       if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
       {
        Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
        put(result, each, Contract_Details);
        counter=counter+1;
       }
       }
      break;
      }
      

      if(counter==0)
      {
       // Checking BillToGrandParent with MPN
       resultset=bmql("SELECT Quote_Num,MPN,Item_Price,Price_Start_Date,Price_End_Date FROM BRCM_Cust_Pricelist WHERE MPN= $part AND Customer_Account_No=$BillToGrandParent AND CPN is NULL ORDER BY ContractNumber DESC");
       for res in resultset
       {
       if(get(res,"Price_Start_Date")<>"" AND get(res,"Price_End_Date")<>""){
        if(strtojavadate(get(res,"Price_Start_Date"),"yyyy-MM-dd HH:mm:ss") <= EffectiveStartDate AND strtojavadate(get(res,"Price_End_Date"),"yyyy-MM-dd HH:mm:ss") >= EndDate)
        {
         Contract_Details = get(res,"Item_Price")+"~"+get(res,"Quote_Num");
         put(result, each, Contract_Details);
         counter=counter+1;
        }
        }
       break;
       }
      }
     }
    }
   }
  }  
 } 
 // ===========================================================================

 
count=0;

 if(BillTo<>"" AND BillTo <> EndCust and counter>=1 and (RouteToMarket == "direct" or RouteToMarket == ""))
 {
  resultSets=bmql("SELECT Quote_Num FROM BRCM_Purchasing_Cust WHERE Purchasing_Cust_ID = $BillTo And Quote_Num= $Quote");


  for res in resultSets
  {
   
   count=count+1;
  }

  if(count ==0)
  {
  put(result, each, "0.0");
   resultSet2=bmql("SELECT MPN,Base_Price,Start_Date,End_Date FROM BRCM_Part_Master_Prc WHERE MPN = $part ORDER BY Start_Date DESC");
   for res2 in resultSet2
   {
   if(get(res2,"Start_Date")<>"" AND get(res2,"End_Date")<>"")
   {
   if(strtojavadate(get(res2,"Start_Date"),"yyyy-MM-dd HH:mm:ss") <= currdate AND strtojavadate(get(res2,"End_Date"),"yyyy-MM-dd HH:mm:ss") >= currdate)
   {
    put(result, each, get(res2,"Base_Price"));
    
   }
   }
   
   }
  }
 }
}
// For Global Price Hunting
 if(counter==0){
 
 resultSet=bmql("SELECT MPN,Base_Price,Start_Date,End_Date FROM BRCM_Part_Master_Prc WHERE MPN = $part ORDER BY Start_Date DESC");
 resultcount=0;
 for res2 in resultSet
 {
 
 if(get(res2,"Start_Date")<>"" AND get(res2,"End_Date")<>"")
 {
 if(strtojavadate(get(res2,"Start_Date"),"yyyy-MM-dd HH:mm:ss") <= currdate AND strtojavadate(get(res2,"End_Date"),"yyyy-MM-dd HH:mm:ss") >= currdate)

  {
  if(containskey(result,each) == false)
  {
   put(result, each, get(res2,"Base_Price"));
  }
  
  }
  }
 }
 if(resultcount==0){
 if(containskey(result,each) == false)
  {
   put(result, each, "0");
  }
 }
 }

}

return result;