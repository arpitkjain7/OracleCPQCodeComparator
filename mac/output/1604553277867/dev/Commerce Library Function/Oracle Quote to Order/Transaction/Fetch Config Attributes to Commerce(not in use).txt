/********************************************************************
Function Name: Fetch Config Attributes to Commerce
Description: This BML function is used to fetch Config Details from Config after CA configurations are done.
Date: 20th dec 2018
User Story: 
Author: Kumar Satyabrata Acharya
********************************************************************/
result="";
startDate=getDate();
endDate=getDate();
dlim="~";
dend="|";
totalNewSupportTerm = "";
for Line in transactionLine
{
 
 if(line._part_number <> "Cust" AND line._model_name <> "Customer Search")
 {
 if(line.effectiveStartDate_l<>""){
  startDate=strtojavadate(line.effectiveStartDate_l, "yyyy-MM-dd HH:mm:ss", "America/Chicago");
 }
 if(line.lineExpirationDate_l<>""){
  endDate=strtojavadate(line.lineExpirationDate_l, "yyyy-MM-dd HH:mm:ss", "America/Chicago");
 }
 supportOptBool = false;
 obj=json();
  if(line._line_item_comment<>"")
  {
   teststring=line._line_item_comment;
   obj=json(teststring);
   PartNumber=jsonget(obj,"PartNumber");
   child=jsonget(obj,"child");
   childObj=json(child);
   transactiontype=jsonget(childObj,"transactionType");
   businessTransactionType=jsonget(childObj,"businessTransactionType");
   specialMetric=jsonget(childObj,"specialMetric");
   enterEnvironment=jsonget(childObj,"enterEnvironment");
   selectLicenseType=jsonget(childObj,"selectLicenseType");
   supportType=jsonget(childObj,"supportType");
   languageRequired=jsonget(childObj,"languageRequired");
   Supportopt=jsonget(childObj,"supportopt");
   totalNewSupportTerm = jsonget(childObj,"totalNewSupportTerm");

   unlimited = jsonget(childObj,"Unlimited");
   if(jsonget(childObj,"startDate")<>"" ){
    startDate=strtojavadate(jsonget(childObj,"startDate"), "MM/dd/yyyy HH:mm:ss", "America/Chicago");
   }

   if(jsonget(childObj,"endDate")<>"" ){
    endDate=strtojavadate(jsonget(childObj,"endDate"), "MM/dd/yyyy HH:mm:ss", "America/Chicago");
   }
   standardQuantity=jsonget(childObj,"standardQuantity");
   existingQuantity=jsonget(childObj,"existingQuantity");
   licenseMetric=jsonget(childObj,"licenseMetric");
   specialMetricLicense=jsonget(childObj,"specialMetricLicense");
   UsageQuantity=jsonget(childObj,"UsageQuantity");
   UsageExistingQuantity=jsonget(childObj,"UsageExistingQuantity");
   ProductType=jsonget(childObj,"ProductType");
   supportPartsPicklist=jsonget(childObj,"supportPartsPicklist");//supportPartsPicklist

                        
   result= result + line._document_number + dlim + "transactionType_l" + dlim + transactiontype + dend;
   result= result + line._document_number + dlim + "transactionTypeM_l" + dlim + transactiontype + dend;
   result= result + line._document_number + dlim + "businessTransactionType_l" + dlim + businessTransactionType + dend;
   result= result + line._document_number + dlim + "specialMetric_l" + dlim + specialMetric + dend;
   result= result + line._document_number + dlim + "enterEnvironment_l" + dlim + enterEnvironment + dend;
   result= result + line._document_number + dlim + "licenseType_l" + dlim + selectLicenseType + dend;
   result= result + line._document_number + dlim + "supportType_l" + dlim + supportType + dend;
   result= result + line._document_number + dlim + "languageRequired_l" + dlim + languageRequired + dend;
   result= result + line._document_number + dlim + "contractStartDate_l" + dlim + datetostr(startDate) + dend;
   result= result + line._document_number + dlim + "contractEndDate_l" + dlim + datetostr(endDate) + dend;
   result= result + line._document_number + dlim + "standardQuantity_l" + dlim + standardQuantity + dend;
   result= result + line._document_number + dlim + "existingQuantity_l" + dlim + existingQuantity + dend;
   result= result + line._document_number + dlim + "licenseMetric_l" + dlim + licenseMetric + dend;
   result= result + line._document_number + dlim + "specialMetricLicense_l" + dlim + specialMetricLicense + dend;
   result= result + line._document_number + dlim + "nonStandardLicenseMetric_l" + dlim + specialMetricLicense + dend;
   result= result + line._document_number + dlim + "usageQuantity_l" + dlim + UsageQuantity + dend;
   result= result + line._document_number + dlim + "usageExistingQuantity_l" + dlim + UsageExistingQuantity + dend;
   result= result + line._document_number + dlim + "nonStandardQty_l" + dlim + UsageQuantity + dend;
   result= result + line._document_number + dlim + "nonStandardExistingQty_l" + dlim + UsageExistingQuantity + dend;
   result= result + line._document_number + dlim + "productType_l" + dlim + ProductType + dend;
   result= result + line._document_number + dlim + "unlimited_l" + dlim + unlimited + dend;
   result= result + line._document_number + dlim + "supportPartsPicklist_l" + dlim + supportPartsPicklist + dend;
   result= result + line._document_number + dlim + "supportOptOut_l" + dlim + Supportopt + dend;
   if(totalNewSupportTerm <> "" and not isnull(totalNewSupportTerm))
   {
    result= result + line._document_number + dlim + "totalNewSupportTermDays_l" + dlim + totalNewSupportTerm + dend;
   }
                        
   if (line._part_number == supportPartsPicklist)
   {
    result= result + line._document_number + dlim + "coveredProduct_l" + dlim + PartNumber + dend;
   }
  }

 }

}
return result;