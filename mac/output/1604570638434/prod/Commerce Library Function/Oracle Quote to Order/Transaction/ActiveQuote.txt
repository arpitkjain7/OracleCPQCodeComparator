/********************************************************************
Function Name: ActiveQuote
Description: To make the transactionsaction active or inactive based on synching the opportunities
Author: Rohit Ranjan
**********Change Description
11/12/2019         Satyabrata Acharya        VIPER-609 : Sync to opportunity not working properly.
********************************************************************/

ret="";
userpasscode="";
userpasscode1="";
str3="";
str2="";
OpptId=opportunityNumber_t;
//changed TransId to initialize with bs_id instead of transaction_id;VIPER-609; kacharya;11/12/2019
TransId=bs_id;

if(primaryQuote_t==true)
{ 
 url="";
 Details=bmql("SELECT Username, Password, RestEndpoint FROM INT_SYSTEM_DETAILS WHERE System='Customer_Search_Number'");

 for detail in Details{
  url=get(detail,"RestEndpoint");
  Username=get(detail,"Username");
  Password=get(detail,"Password");
  userpasscode1=Username+":"+Password;
 }
GETURL=url+"crmRestApi/resources/11.13.18.02/salesOrders/?q=OptyNumber="+OpptId;
str3=encodebase64(userpasscode1);
auth="Basic" + " " + str3;

defaultErrorMessage="";
headersDict = dict("string"); 
put(headersDict,"Content-Type","application/json"); 
put(headersDict,"Authorization",auth);

response=Dict("string");
response = urldata(GETURL,"GET",headersDict, "5000");
str= get(response,"Message-Body");


jsonObj1=json(str);
TransactionId=jsonpathgetmultiple(jsonObj1,"$..ExternalReferenceNumber");
size=jsonarraysize(TransactionId);
jsonrange=range(size);

dictUpdate=dict("string");
retVal="";
userName = "";
pwd = "";
url = "";
trans = "";
fileLocation ="";
nCount=0;

for each in jsonrange{
 jsonGet=jsonarrayget(TransactionId,nCount);
 
 if(jsonGet<>TransId)
  {
 resultSet = bmql("SELECT File_Location,Username,Password,SoapEndpoint FROM INT_SYSTEM_DETAILS WHERE System='PrimaryQuote'");
 
 for vals in resultSet{
   fileLocation = get(vals,"File_Location");
   url = get(vals,"SoapEndpoint");
   userName=get(vals,"Username");
   pwd=get(vals,"Password");
   
 }
 
put(dictUpdate,"companyName",_system_company_name);
//put(dictUpdate,"SessionId",_system_user_session_id);
put(dictUpdate,"Username",userName);
put(dictUpdate,"Password",pwd);
put(dictUpdate,"Value","false");
put(dictUpdate,"ActionName","saveAndSyncItems");
put(dictUpdate,"BS_ID",jsonGet);

retVal=applytemplate(fileLocation,dictUpdate);
retVal = replace(retVal,"&lt;","<");
retVal = replace(retVal,"&gt;",">");
retVal = replace(retVal,"&quot;","\"");

retval1=urldata(url,"Post",headersDict,retVal);

}
nCount=nCount+1;
}
}
return ret;