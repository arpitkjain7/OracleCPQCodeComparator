//************************************************************************************************************
//** Description: To calculate the duration of the Deal in months
//** 
//** Param:       Contract Start Date and Contract End Date
//**
//** Return type: string
//**
//** History:     Date          Author          Comment 
//**              ------------- --------------- --------------------------------------------------------------
//**              02/02/2019                     Initial version
//** Changes done by Arjun for changing StartDate and Enddate on 23-Apr-2019
//************************************************************************************************************

if(isnull(contractStartDate_services) or isnull(contractEndDate_services)){
 return "0";
}

startDate = strtojavadate(substring(datetostr(contractStartDate_services,"MM/dd/yyyy"),0,10)+" "+"00:00:00","MM/dd/yyyy HH:mm:ss");
endDate = strtojavadate(substring(datetostr(contractEndDate_services,"MM/dd/yyyy"),0,10)+" "+"00:01:01","MM/dd/yyyy HH:mm:ss");
//startDate = contractStartDate_services;


//endDate = contractEndDate_services;

startStr = datetostr(startDate,"MM/dd/yyyy");
endStr = datetostr(endDate,"MM/dd/yyyy");
startAry = split(startStr,"/");
endAry = split(endStr,"/");
startY = atof(startAry[2]);
startD = atof(startAry[1]);
startM = atof(startAry[0]);

endY = atof(endAry[2]);
endD = atof(endAry[1]);
endM = atof(endAry[0]);

// Setting Number of Days in Month for Calculating the difference
monthsArray = integer[12];
days = dict("float");
put(days,1.0,31.0);
put(days,2.0,28.0);
put(days,3.0,31.0);
put(days,4.0,30.0);
put(days,5.0,31.0);
put(days,6.0,30.0);
put(days,7.0,31.0);
put(days,8.0,31.0);
put(days,9.0,30.0);
put(days,10.0,31.0);
put(days,11.0,30.0);
put(days,12.0,31.0);


daysDiff = getdiffindays(endDate , startDate);
yearsDiff = (endY - startY)+1 ;
monthsDiff = (endM - startM);
if(endDate <=startDate){

 return "0";
}



firstMonthDays = startD-1;
// Setting Start of Start Date
startoffirstMonth = adddays(startDate,-1*integer(firstMonthDays));



endMonthDays = endD;
// Setting End of End Date
startofEndMonth = adddays(endDate ,-1*integer(endMonthDays));

// Setting Number of Days in Month for Leap Year
if(isleap(integer(endY)) or isleap(integer(startY))){
 put(days,2.0,29.0);
}

partMonths = (endMonthDays/get(days,endM))-(firstMonthDays/get(days,startM ));



newstartStr = datetostr(startoffirstMonth ,"MM/dd/yyyy");
newendStr = datetostr(startofEndMonth ,"MM/dd/yyyy");
newstartAry = split(newstartStr ,"/");
newendAry = split(newendStr ,"/");
newstartY = atof(newstartAry [2]);
newstartD = atof(newstartAry [1]);
newstartM = atof(newstartAry [0]);

newendY = atof(newendAry [2]);
newendD = atof(newendAry [1]);
newendM = atof(newendAry [0]);


calMonths = 0;


// Setting The Deal Term (In Months) by conversion from year to month based on condition on Month Start and Month End
if(newendM <> newstartM){
 noOfMonths = ((newendY - newstartY) * 12.0) + (newendM - newstartM);
 if(newendD >= newstartD){
  noOfMonths = noOfMonths + 1;
 }
}
else{
 noOfMonths = ((newendY - newstartY) * 12.0);
 if(newendD >= newstartD){
  noOfMonths = noOfMonths + 1;
 }
}



return string(round(noOfMonths+partMonths,2));